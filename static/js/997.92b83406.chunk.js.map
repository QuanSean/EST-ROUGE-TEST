{"version":3,"file":"static/js/997.92b83406.chunk.js","mappings":"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","sources":["screens/common/Form/ErrorMessage.tsx","screens/common/Form/InputText.tsx","screens/common/Pagination/styles.ts","screens/common/Pagination/index.tsx","screens/Home/styles.ts","screens/Home/Item.tsx","screens/Home/index.tsx","screens/common/Form/use-form-cus.ts","screens/common/Layout/Header.tsx","screens/common/Layout/styles.ts","screens/common/Layout/index.tsx","state/ducks/blogs/selectors.ts"],"sourcesContent":["import { ErrorMessage as ErrorMessageBase } from \"@hookform/error-message\";\r\nimport React from \"react\";\r\nimport { useFormContext } from \"react-hook-form\";\r\ntype Props = {\r\n  name: string;\r\n};\r\nexport const ErrorMessage: React.FC<Props> = React.memo(({ name }) => {\r\n  const {\r\n    formState: { errors },\r\n  } = useFormContext();\r\n\r\n  return (\r\n    <div className=\"error-message\">\r\n      <ErrorMessageBase name={name} errors={errors} />\r\n    </div>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { useFormContext } from \"react-hook-form\";\r\n\r\nimport { ErrorMessage } from \"./ErrorMessage\";\r\n\r\ntype Props = {\r\n  name: string;\r\n  title: string;\r\n  require?: boolean;\r\n  placeholder?: string;\r\n  note?: React.ReactNode;\r\n  optionClass?: string;\r\n  titleClass?: string;\r\n  inputClass?: string;\r\n  type?: \"text\" | \"password\" | \"email\";\r\n  style?: any;\r\n};\r\nexport const InputText: React.FC<Props> = ({\r\n  name,\r\n  title,\r\n  titleClass,\r\n  inputClass,\r\n  optionClass,\r\n  require,\r\n  placeholder,\r\n  note,\r\n  type,\r\n  style,\r\n}) => {\r\n  const { register, watch, setValue } = useFormContext();\r\n\r\n  const value: string = watch(name);\r\n\r\n  const onBlur = () => {\r\n    if (type !== \"password\") {\r\n      setValue(name, String(value).trim(), { shouldValidate: true });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`input-text ${optionClass || \"\"}`}>\r\n      <div style={{ marginBottom: \"10px\" }}>\r\n        <span className={titleClass || \"input-text__title\"}>\r\n          {title}{\" \"}\r\n          {require && <span className=\"input-text__title__require\">*</span>}\r\n        </span>\r\n      </div>\r\n      <input\r\n        className={inputClass}\r\n        {...register(name)}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        type={type}\r\n        onBlur={onBlur}\r\n        style={style}\r\n        autoComplete=\"off\"\r\n      />\r\n      <ErrorMessage name={name} />\r\n      {note ? note : <></>}\r\n    </div>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  margin-top: 30px;\r\n`;\r\n\r\nexport const Button = styled.div`\r\n  cursor: pointer;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Button, Container } from \"./styles\";\r\n\r\ntype Props = {\r\n  currentPage: number;\r\n  onPrevious: Function;\r\n  onNext: Function;\r\n  onChangePage: Function;\r\n};\r\nconst Pagination: React.FC<Props> = ({\r\n  currentPage,\r\n  onPrevious,\r\n  onNext,\r\n  onChangePage,\r\n}) => {\r\n  return (\r\n    <Container>\r\n      <nav aria-label=\"...\">\r\n        <ul className=\"pagination\">\r\n          <li className={`page-item ${currentPage === 1 ? \"disabled\" : \"\"}`}>\r\n            <Button\r\n              className=\"page-link\"\r\n              tabIndex={-1}\r\n              aria-disabled=\"true\"\r\n              onClick={() => onPrevious(currentPage - 1)}\r\n            >\r\n              Previous\r\n            </Button>\r\n          </li>\r\n          {currentPage !== 1 && (\r\n            <li className=\"page-item\">\r\n              <Button\r\n                className=\"page-link\"\r\n                onClick={() => onChangePage(currentPage - 1)}\r\n              >\r\n                {currentPage - 1}\r\n              </Button>\r\n            </li>\r\n          )}\r\n          <li className=\"page-item active\" aria-current=\"page\">\r\n            <Button className=\"page-link\">{currentPage}</Button>\r\n          </li>\r\n          <li className=\"page-item\">\r\n            <Button\r\n              className=\"page-link\"\r\n              onClick={() => onChangePage(currentPage + 1)}\r\n            >\r\n              {currentPage + 1}\r\n            </Button>\r\n          </li>\r\n          <li className=\"page-item\">\r\n            <Button\r\n              className=\"page-link\"\r\n              onClick={() => onNext(currentPage + 1)}\r\n            >\r\n              Next\r\n            </Button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ButtonSearch = styled.button`\r\n  margin: 20px 0;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  cursor: pointer;\r\n  opacity: 0.8;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { ListItem } from \"./styles\";\r\n\r\ntype Props = {\r\n  img: string;\r\n  alt?: string;\r\n  content: string;\r\n  title: string;\r\n  id: string;\r\n};\r\n\r\nconst Item: React.FC<Props> = ({ img, alt, content, title, id }) => {\r\n  const history = useHistory();\r\n\r\n  const onClickItem = () => {\r\n    history.push(`/detail/${id}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ListItem className=\"media\" onClick={onClickItem}>\r\n        <img src={img} className=\"mr-3\" alt={alt} />\r\n        <div className=\"media-body\">\r\n          <h5 className=\"mt-0 mb-1\">{title}</h5>\r\n          {content}\r\n        </div>\r\n      </ListItem>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Item);\r\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { FormProvider } from \"react-hook-form\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport { ListBlogsRequest } from \"../../state/api-models/blogs\";\r\nimport { blogsActions } from \"../../state/ducks/blogs\";\r\nimport { IRootState } from \"../../state/ducks/reducers\";\r\nimport { InputText, useForm } from \"../common/Form\";\r\nimport Layout from \"../common/Layout\";\r\nimport Pagination from \"../common/Pagination\";\r\nimport Item from \"./Item\";\r\nimport { ButtonSearch } from \"./styles\";\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { t } = useTranslation([\"home\"]);\r\n\r\n  const blogList = useSelector((state: IRootState) => state.blogs).blogs;\r\n\r\n  const [pagination, setPagination] = useState({\r\n    search: \"\",\r\n    page: 1,\r\n  });\r\n\r\n  const formbag = useForm({\r\n    initValues: {\r\n      search: \"\",\r\n    },\r\n  });\r\n\r\n  const callApiGetBlogList = useCallback(\r\n    (data: ListBlogsRequest) => {\r\n      dispatch(blogsActions.getBlogList.request(data));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const search = window.location.search;\r\n\r\n  const getData = useCallback(\r\n    (page: null | string, search: null | string) => {\r\n      setPagination({\r\n        page: page ? Number(page) : 1,\r\n        search: search || \"\",\r\n      });\r\n      callApiGetBlogList({ page, search: search || \"\" });\r\n    },\r\n    [callApiGetBlogList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(search);\r\n    const page = params.get(\"page\");\r\n    const searchParam = params.get(\"search\");\r\n    getData(page, searchParam);\r\n  }, [getData, search]);\r\n\r\n  const data = useMemo(() => blogList.blogs.response, [blogList]);\r\n\r\n  const isLoading = useMemo(\r\n    () => blogList.blogs.loading,\r\n    [blogList.blogs.loading]\r\n  );\r\n\r\n  const onNextPage = (page: number) => {\r\n    onChangePage(page);\r\n  };\r\n\r\n  const onPreviousPage = (page: number) => {\r\n    onChangePage(page);\r\n  };\r\n\r\n  const onChangePageNumber = (page: number) => {\r\n    onChangePage(page);\r\n  };\r\n\r\n  const onChangePage = (page: number) => {\r\n    history.push({\r\n      pathname: \"/\",\r\n      search: `?page=${page}${\r\n        pagination.search ? `&search=${pagination.search}` : \"\"\r\n      }`,\r\n    });\r\n  };\r\n\r\n  const onSearch = () => {\r\n    const valueSearch = formbag.watch(\"search\");\r\n    history.push({\r\n      pathname: \"/\",\r\n      search: `?page=1${valueSearch ? `&search=${valueSearch}` : \"\"}`,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <FormProvider {...formbag}>\r\n        <InputText title={t(\"home:search\")} name=\"search\" />\r\n        <ButtonSearch\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          onClick={onSearch}\r\n        >\r\n          {t(\"home:search\")}\r\n        </ButtonSearch>\r\n      </FormProvider>\r\n      <ul className=\"list-unstyled\">\r\n        {isLoading ? (\r\n          \"Loading\"\r\n        ) : (\r\n          <>\r\n            {data.length > 0\r\n              ? data.map((item, index) => {\r\n                  return (\r\n                    <Item\r\n                      id={item.id}\r\n                      img={item.image}\r\n                      content={item.content}\r\n                      title={item.title}\r\n                      key={`blogs${index}`}\r\n                    />\r\n                  );\r\n                })\r\n              : \"Empty\"}\r\n          </>\r\n        )}\r\n        {data.length > 0 && (\r\n          <Pagination\r\n            currentPage={pagination.page}\r\n            onNext={onNextPage}\r\n            onPrevious={onPreviousPage}\r\n            onChangePage={onChangePageNumber}\r\n          />\r\n        )}\r\n      </ul>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useForm as useFormBase } from \"react-hook-form\";\r\n\r\ntype Props = {\r\n  validateSchema?: any;\r\n  initValues: any;\r\n};\r\n\r\nexport const useForm = ({ validateSchema, initValues }: Props) => {\r\n  return useFormBase({\r\n    defaultValues: initValues,\r\n    resolver: validateSchema ? yupResolver(validateSchema) : undefined,\r\n  });\r\n};\r\n","import React from \"react\";\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-light bg-light\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            <img\r\n              src=\"https://est-rouge.com/wp-content/uploads/2016/12/cropped-square_icon_white@8x-32x32.png\"\r\n              width=\"30\"\r\n              height=\"30\"\r\n              className=\"d-inline-block align-top\"\r\n              alt=\"\"\r\n            />\r\n            EST ROUGE Test\r\n          </a>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Header);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  margin-top: 50px;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport Header from \"./Header\";\r\nimport { Container } from \"./styles\";\r\ntype Props = {\r\n  children?: React.ReactNode;\r\n};\r\nconst Layout: React.FC<Props> = ({ children }) => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container className=\"container\">{children}</Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Layout);\r\n","import { createSelector } from \"reselect\";\r\n\r\nimport { StateAll } from \"../models\";\r\nimport { BlogsState, initialBlogsState } from \"./models\";\r\n\r\nconst rootSelector = (state: StateAll) =>\r\n  state.blogs.blogs || initialBlogsState;\r\n\r\nexport const getBlogList = createSelector(\r\n  rootSelector,\r\n  (blockState: BlogsState) => {\r\n    return blockState.blogs ? blockState.blogs : initialBlogsState.blogs;\r\n  }\r\n);\r\n"],"names":["ErrorMessage","React","name","errors","useFormContext","formState","className","InputText","title","titleClass","inputClass","optionClass","require","placeholder","note","type","style","register","watch","setValue","value","marginBottom","onBlur","String","trim","shouldValidate","autoComplete","Container","styled","Button","currentPage","onPrevious","onNext","onChangePage","tabIndex","onClick","ButtonSearch","ListItem","Item","img","alt","content","id","history","useHistory","push","src","dispatch","useDispatch","t","useTranslation","blogList","useSelector","state","blogs","useState","search","page","pagination","setPagination","formbag","validateSchema","initValues","useFormBase","defaultValues","resolver","yupResolver","undefined","useForm","callApiGetBlogList","useCallback","data","blogsActions","window","location","getData","Number","useEffect","params","URLSearchParams","get","searchParam","useMemo","response","isLoading","loading","pathname","Layout","valueSearch","length","map","item","index","image","Header","href","width","height","children","createSelector","initialBlogsState","blockState"],"sourceRoot":""}